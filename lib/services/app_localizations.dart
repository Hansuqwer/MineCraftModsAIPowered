import 'package:flutter/material.dart';

/// App localization service for multi-language support
class AppLocalizations {
  final Locale locale;

  AppLocalizations(this.locale);

  static AppLocalizations of(BuildContext context) {
    return Localizations.of<AppLocalizations>(context, AppLocalizations) ??
        AppLocalizations(const Locale('en'));
  }

  static const LocalizationsDelegate<AppLocalizations> delegate =
      _AppLocalizationsDelegate();

  // Common
  String get appName => _translate('Crafta', 'Crafta');
  String get ok => _translate('OK', 'OK');
  String get cancel => _translate('Cancel', 'Avbryt');
  String get save => _translate('Save', 'Spara');
  String get delete => _translate('Delete', 'Ta bort');
  String get send => _translate('Send', 'Skicka');
  String get back => _translate('Back', 'Tillbaka');
  String get next => _translate('Next', 'N칛sta');
  String get done => _translate('Done', 'Klar');

  // Welcome Screen
  String get welcomeTitle => _translate('Welcome to Crafta!', 'V칛lkommen till Crafta!');
  String get welcomeSubtitle => _translate(
    'Create amazing creatures with AI!',
    'Skapa fantastiska varelser med AI!'
  );
  String get getStarted => _translate('Get Started', 'Kom ig친ng');
  String get parentSettings => _translate('Parent Settings', 'F칬r칛ldra춼inst칛llningar');

  // Creator Screen
  String get creatorTitle => _translate('Crafta Creator', 'Crafta Skapare');
  String get craftaGreeting => _translate(
    'Hi! I\'m Crafta! What would you like to create today?',
    'Hej! Jag 칛r Crafta! Vad vill du skapa idag?'
  );
  String get listening => _translate('Listening...', 'Lyssnar...');
  String get tapAndHold => _translate(
    'Tap and hold to speak',
    'H친ll inne f칬r att prata'
  );
  String get tapToSpeak => _translate(
    'Tap and hold the microphone to talk to Crafta',
    'H친ll inne p친 mikrofonen f칬r att prata med Crafta'
  );
  String get orTypeMessage => _translate('Or type your message:', 'Eller skriv ditt meddelande:');
  String get typeHere => _translate(
    'Describe what you want to create...',
    'Beskriv vad du vill skapa...'
  );
  String get creating => _translate('Creating your creature...', 'Skapar din varelse...');

  // Advanced Customization
  String get advancedCustomization => _translate(
    'Advanced Customization',
    'Avancerad anpassning'
  );
  String get advancedCustomizationAvailable => _translate(
    '游꿛 Advanced Customization Available!',
    '游꿛 Avancerad anpassning tillg칛nglig!'
  );
  String get customizeOptions => _translate(
    'Customize colors, size, personality, abilities, and accessories',
    'Anpassa f칛rger, storlek, personlighet, f칬rm친gor och tillbeh칬r'
  );
  String get customize => _translate('Customize', 'Anpassa');
  String get comingSoon => _translate('Coming Soon!', 'Kommer snart!');
  String get comingSoonDescription => _translate(
    'Advanced customization features are under development.\n\nFor now, you can create amazing creatures using voice or text input!',
    'Avancerade anpassningsfunktioner 칛r under utveckling.\n\nF칬r tillf칛llet kan du skapa fantastiska varelser med r칬st eller text!'
  );
  String get goBack => _translate('Go Back', 'G친 tillbaka');

  // Complete Screen
  String get creationReady => _translate(
    'Your Creation is Ready!',
    'Din skapelse 칛r klar!'
  );
  String get amazing => _translate('Amazing!', 'Fantastiskt!');
  String get readyForMinecraft => _translate(
    'Your creation is ready to go to Minecraft!',
    'Din skapelse 칛r redo f칬r Minecraft!'
  );
  String get shareCreature => _translate('Share Creature', 'Dela varelse');
  String get exportToMinecraft => _translate(
    'Export to Minecraft',
    'Exportera till Minecraft'
  );
  String get makeAnother => _translate('Make Another', 'Skapa en till');
  String get nextCreature => _translate('Next Creature', 'N칛sta varelse');
  String get tryThisNext => _translate('Try this next:', 'Prova detta h칛rn칛st:');
  String get tapToCreate => _translate('Tap to create!', 'Tryck f칬r att skapa!');

  // Settings
  String get settings => _translate('Settings', 'Inst칛llningar');
  String get language => _translate('Language', 'Spr친k');
  String get selectLanguage => _translate('Select Language', 'V칛lj spr친k');
  String get childAge => _translate('Child Age', 'Barnets 친lder');
  String get voiceSettings => _translate('Voice Settings', 'R칬stinst칛llningar');
  String get aiSettings => _translate('AI Settings', 'AI-inst칛llningar');
  String get minecraftSettings => _translate(
    'Minecraft Settings',
    'Minecraft-inst칛llningar'
  );

  // Parent Settings
  String get safetyFirst => _translate('Safety First!', 'S칛kerhet f칬rst!');
  String get craftaIsSafe => _translate(
    'Crafta is designed with safety in mind. All content is age-appropriate and moderated.',
    'Crafta 칛r designad med s칛kerhet i 친tanke. Allt inneh친ll 칛r 친ldersanpassat och modererat.'
  );
  String get ageGroup => _translate('Age Group', '칀ldersgrupp');
  String get safetyLevel => _translate('Safety Level', 'S칛kerhetsniv친');
  String get high => _translate('High', 'H칬g');
  String get medium => _translate('Medium', 'Medel');
  String get low => _translate('Low', 'L친g');
  String get featureToggles => _translate('Feature Toggles', 'Funktionsv칛xlingar');
  String get speechRecognition => _translate('Speech Recognition', 'Taligenk칛nning');
  String get textToSpeech => _translate('Text-to-Speech', 'Text-till-tal');
  String get aiCreation => _translate('AI Creation', 'AI-skapande');
  String get minecraftExportFeature => _translate('Minecraft Export', 'Minecraft Export');
  String get creationHistory => _translate('Creation History', 'Skapelsehistorik');
  String get viewHistory => _translate('View History', 'Visa historik');
  String get clearHistory => _translate('Clear History', 'Rensa historik');
  String get aiProviderStatus => _translate('AI Provider Status', 'AI-leverant칬rstatus');
  String get viewStatus => _translate('View Status', 'Visa status');

  // Errors
  String get errorOccurred => _translate('An error occurred', 'Ett fel uppstod');
  String get tryAgain => _translate('Try again', 'F칬rs칬k igen');
  String get noInternet => _translate(
    'No internet connection',
    'Ingen internetanslutning'
  );
  String get offlineMode => _translate('Offline Mode', 'Offlinel칛ge');

  // AI Responses (Personality)
  String get aiCreating => _translate(
    'Let me create that for you!',
    'L친t mig skapa det 친t dig!'
  );
  String get aiExcited => _translate(
    'Wow! That sounds amazing!',
    'Wow! Det l친ter fantastiskt!'
  );
  String get aiEncouragement => _translate(
    'Great job! What else can we create?',
    'Bra jobbat! Vad mer kan vi skapa?'
  );

  // Welcome screen features
  String get voiceFirst => _translate('Voice-First', 'R칬ststyrd');
  String get voiceFirstDesc => _translate('Talk to create!', 'Prata f칬r att skapa!');
  String get aiPowered => _translate('AI-Powered', 'AI-Driven');
  String get aiPoweredDesc => _translate('Magic creativity!', 'Magisk kreativitet!');
  String get minecraftExport => _translate('Minecraft Export', 'Minecraft Export');
  String get minecraftExportDesc => _translate('Play with your creatures!', 'Spela med dina varelser!');

  // Quick tips
  String get quickTips => _translate('Quick Tips', 'Snabbtips');
  String get tip1 => _translate('Hold the microphone to speak', 'H친ll mikrofonen f칬r att prata');
  String get tip2 => _translate('Describe colors, size, and abilities', 'Beskriv f칛rger, storlek och f칬rm친gor');
  String get tip3 => _translate('Try "dragon with fire" or "rainbow unicorn"', 'Prova "drake med eld" eller "regnb친gs enh칬rning"');

  // Helper method for translation
  String _translate(String en, String sv) {
    return locale.languageCode == 'sv' ? sv : en;
  }
}

class _AppLocalizationsDelegate
    extends LocalizationsDelegate<AppLocalizations> {
  const _AppLocalizationsDelegate();

  @override
  bool isSupported(Locale locale) => ['en', 'sv'].contains(locale.languageCode);

  @override
  Future<AppLocalizations> load(Locale locale) async {
    return AppLocalizations(locale);
  }

  @override
  bool shouldReload(_AppLocalizationsDelegate old) => false;
}
