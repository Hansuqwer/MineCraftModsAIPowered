// Mocks generated by Mockito 5.4.4 from annotations
// in crafta/test/services/enhanced_voice_ai_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:crafta/models/conversation.dart' as _i7;
import 'package:crafta/services/ai_service.dart' as _i6;
import 'package:crafta/services/local_storage_service.dart' as _i8;
import 'package:crafta/services/speech_service.dart' as _i4;
import 'package:crafta/services/tts_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TTSService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTTSService extends _i1.Mock implements _i2.TTSService {
  MockTTSService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAvailable => (super.noSuchMethod(
        Invocation.getter(#isAvailable),
        returnValue: false,
      ) as bool);

  @override
  _i3.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<void> speak(String? text) => (super.noSuchMethod(
        Invocation.method(
          #speak,
          [text],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> stop() => (super.noSuchMethod(
        Invocation.method(
          #stop,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playCelebrationSound() => (super.noSuchMethod(
        Invocation.method(
          #playCelebrationSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playSparkleSound() => (super.noSuchMethod(
        Invocation.method(
          #playSparkleSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playMagicSound() => (super.noSuchMethod(
        Invocation.method(
          #playMagicSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playWelcomeSound() => (super.noSuchMethod(
        Invocation.method(
          #playWelcomeSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playCreationCompleteSound() => (super.noSuchMethod(
        Invocation.method(
          #playCreationCompleteSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playThinkingSound() => (super.noSuchMethod(
        Invocation.method(
          #playThinkingSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playSuccessSound() => (super.noSuchMethod(
        Invocation.method(
          #playSuccessSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playErrorSound() => (super.noSuchMethod(
        Invocation.method(
          #playErrorSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playLoadingSound() => (super.noSuchMethod(
        Invocation.method(
          #playLoadingSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playCreatureSound(String? creatureType) =>
      (super.noSuchMethod(
        Invocation.method(
          #playCreatureSound,
          [creatureType],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playAmbientSound() => (super.noSuchMethod(
        Invocation.method(
          #playAmbientSound,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playWarmWelcome() => (super.noSuchMethod(
        Invocation.method(
          #playWarmWelcome,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playEncouragement() => (super.noSuchMethod(
        Invocation.method(
          #playEncouragement,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playFunnyThinking() => (super.noSuchMethod(
        Invocation.method(
          #playFunnyThinking,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> playFunnySurprise() => (super.noSuchMethod(
        Invocation.method(
          #playFunnySurprise,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setSpeechRate(double? rate) => (super.noSuchMethod(
        Invocation.method(
          #setSpeechRate,
          [rate],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setPitch(double? pitch) => (super.noSuchMethod(
        Invocation.method(
          #setPitch,
          [pitch],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> setVolume(double? volume) => (super.noSuchMethod(
        Invocation.method(
          #setVolume,
          [volume],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [SpeechService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSpeechService extends _i1.Mock implements _i4.SpeechService {
  MockSpeechService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isListening => (super.noSuchMethod(
        Invocation.getter(#isListening),
        returnValue: false,
      ) as bool);

  @override
  bool get isAvailable => (super.noSuchMethod(
        Invocation.getter(#isAvailable),
        returnValue: false,
      ) as bool);

  @override
  String get lastWords => (super.noSuchMethod(
        Invocation.getter(#lastWords),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#lastWords),
        ),
      ) as String);

  @override
  _i3.Future<bool> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String?> listen() => (super.noSuchMethod(
        Invocation.method(
          #listen,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<void> startListening({
    required dynamic Function(String)? onResult,
    required dynamic Function(String)? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startListening,
          [],
          {
            #onResult: onResult,
            #onError: onError,
          },
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> stopListening() => (super.noSuchMethod(
        Invocation.method(
          #stopListening,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> cancelListening() => (super.noSuchMethod(
        Invocation.method(
          #cancelListening,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [AIService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAIService extends _i1.Mock implements _i6.AIService {
  MockAIService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> needsSetup() => (super.noSuchMethod(
        Invocation.method(
          #needsSetup,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<String>> getRecommendedSetup() => (super.noSuchMethod(
        Invocation.method(
          #getRecommendedSetup,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<String> getCraftaResponse(
    String? userMessage, {
    int? age = 6,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCraftaResponse,
          [userMessage],
          {#age: age},
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #getCraftaResponse,
            [userMessage],
            {#age: age},
          ),
        )),
      ) as _i3.Future<String>);

  @override
  _i3.Future<bool> isOnline() => (super.noSuchMethod(
        Invocation.method(
          #isOnline,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>> parseCreatureRequest(String? userMessage) =>
      (super.noSuchMethod(
        Invocation.method(
          #parseCreatureRequest,
          [userMessage],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<_i7.Conversation?> processUserInput(
    String? userMessage,
    _i7.Conversation? currentConversation,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #processUserInput,
          [
            userMessage,
            currentConversation,
          ],
        ),
        returnValue: _i3.Future<_i7.Conversation?>.value(),
      ) as _i3.Future<_i7.Conversation?>);

  @override
  String getEncouragingResponse() => (super.noSuchMethod(
        Invocation.method(
          #getEncouragingResponse,
          [],
        ),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.method(
            #getEncouragingResponse,
            [],
          ),
        ),
      ) as String);

  @override
  _i3.Future<String> generateResponse(
    String? userInput, {
    String? systemPrompt,
    List<String>? conversationHistory,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateResponse,
          [userInput],
          {
            #systemPrompt: systemPrompt,
            #conversationHistory: conversationHistory,
          },
        ),
        returnValue: _i3.Future<String>.value(_i5.dummyValue<String>(
          this,
          Invocation.method(
            #generateResponse,
            [userInput],
            {
              #systemPrompt: systemPrompt,
              #conversationHistory: conversationHistory,
            },
          ),
        )),
      ) as _i3.Future<String>);
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i8.LocalStorageService {
  MockLocalStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> saveData(
    String? key,
    Map<String, dynamic>? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveData,
          [
            key,
            data,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>?> loadData(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadData,
          [key],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);

  @override
  _i3.Future<bool> deleteData(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteData,
          [key],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> hasData(String? key) => (super.noSuchMethod(
        Invocation.method(
          #hasData,
          [key],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> saveCreature(Map<String, dynamic>? creature) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCreature,
          [creature],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<Map<String, dynamic>>> loadCreatures() => (super.noSuchMethod(
        Invocation.method(
          #loadCreatures,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<Map<String, dynamic>?> getCreature(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCreature,
          [id],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);

  @override
  _i3.Future<bool> deleteCreature(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCreature,
          [id],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> saveConversation(Map<String, dynamic>? conversation) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveConversation,
          [conversation],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<List<Map<String, dynamic>>> loadConversations() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadConversations,
          [],
        ),
        returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<bool> clearConversations() => (super.noSuchMethod(
        Invocation.method(
          #clearConversations,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<bool> saveSettings(Map<String, dynamic>? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveSettings,
          [settings],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>?> loadSettings() => (super.noSuchMethod(
        Invocation.method(
          #loadSettings,
          [],
        ),
        returnValue: _i3.Future<Map<String, dynamic>?>.value(),
      ) as _i3.Future<Map<String, dynamic>?>);

  @override
  _i3.Future<bool> cacheAPIResponse(
    String? key,
    String? response,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheAPIResponse,
          [
            key,
            response,
          ],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String?> getCachedAPIResponse(
    String? key, {
    Duration? maxAge = const Duration(hours: 1),
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCachedAPIResponse,
          [key],
          {#maxAge: maxAge},
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<bool> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<Map<String, dynamic>> getStorageStats() => (super.noSuchMethod(
        Invocation.method(
          #getStorageStats,
          [],
        ),
        returnValue:
            _i3.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<bool> clearAll() => (super.noSuchMethod(
        Invocation.method(
          #clearAll,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<String?> exportAllData() => (super.noSuchMethod(
        Invocation.method(
          #exportAllData,
          [],
        ),
        returnValue: _i3.Future<String?>.value(),
      ) as _i3.Future<String?>);

  @override
  _i3.Future<bool> importData(String? jsonString) => (super.noSuchMethod(
        Invocation.method(
          #importData,
          [jsonString],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);

  @override
  _i3.Future<dynamic> getData(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getData,
          [key],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);

  @override
  _i3.Future<void> removeData(String? key) => (super.noSuchMethod(
        Invocation.method(
          #removeData,
          [key],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
